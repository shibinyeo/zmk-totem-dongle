//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define Base        0
#define Nav         1
#define Num         2
#define WinNav      3
#define Mouse       4
#define MouseJump   5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <120>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp N6 &kp N5 &kp N6 &kp N &kp O &kp LS(P) &kp EXCL &kp S &kp T &kp O &kp EXCL>;
            label = "PW";
        };

        sb: sb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp E &kp O &kp S &kp H &kp I &kp B &kp I &kp N &kp N9 &kp N7 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "SB";
        };

        rh: rh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp S &kp H &kp Y &kp E &kp O &kp AT &kp R &kp E &kp D &kp H &kp A &kp T &kp DOT &kp C &kp O &kp M>;
            label = "RH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
       &kp Q       &kp W       &kp F        &kp P         &kp B    &kp J  &kp L        &kp U        &kp O       &kp SQT
       &hm LGUI A  &hm LALT R  &hm LCTRL S  &hm LSHIFT T  &kp G    &kp M  &hm RSHFT N  &hm RCTRL E  &hm RALT I  &hm RGUI O
&mo 3  &kp Z       &kp X       &kp C        &kp D         &kp V    &kp K  &kp H        &kp COMMA    &kp DOT     &kp SLASH   &kp ENTER
                               &none        &kp SPACE     &mo 4    &mo 1  &lt 0 BSPC   &mo 2
            >;
        };

        Nav {
            label = "Nav";
            bindings = <
         &kp F1        &kp F2        &kp F3     &kp F4             &kp F5             &kp F6    &kp F7         &kp F8       &kp F9     &kp F10
         &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT     &none              &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp PRINTSCREEN
&kp TAB  &sb           &rh           &pw        &none              &none              &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp DELETE       &kp ESCAPE
                                     &none      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &none     &none          &none
            >;
        };

        Num {
            label = "Num";
            bindings = <
       &kp GRAVE  &kp MINUS  &kp EQUAL  &none      &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp N7  &kp N8  &kp N9  &kp NON_US_BACKSLASH
       &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp N4  &kp N5  &kp N6  &kp SEMICOLON
&none  &none      &none      &none      &none      &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp N1  &kp N2  &kp N3  &kp N0                &none
                             &none      &none      &none                   &none                  &none   &none
            >;
        };

        WinNav {
            label = "WinNav";
            bindings = <
       &none     &none         &none      &none           &none    &none  &kp LS(LA(LC(N7)))  &kp LS(LA(LC(N8)))  &kp LS(LA(LC(N9)))  &kp LS(LA(LC(TAB)))
       &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &none  &kp LS(LA(LC(N4)))  &kp LS(LA(LC(N5)))  &kp LS(LA(LC(N6)))  &kp LA(TAB)
&none  &none     &none         &none      &none           &none    &none  &kp LA(LS(LC(N1)))  &kp LS(LA(LC(N2)))  &kp LS(LA(LC(N3)))  &none                &none
                               &none      &none           &none    &none  &none               &kp LS(LA(LC(N0)))
            >;
        };

        Mouse {
            label = "Mouse";
            bindings = <
       &none  &none  &mkp RCLK  &mkp LCLK  &none    &none  &none  &none  &none  &none
       &none  &none  &none      &mo 5      &none    &none  &none  &none  &none  &none
&none  &none  &none  &none      &none      &none    &none  &none  &none  &none  &none  &none
                     &none      &none      &none    &none  &none  &none
            >;
        };

        MouseJump {
            label = "MouseJump";
            bindings = <
       &none  &none  &none  &none  &none    &none              &none              &none              &none              &none
       &none  &none  &none  &none  &none    &kp LS(LA(LC(M)))  &kp LS(LA(LC(N)))  &kp LA(LS(LC(E)))  &kp LS(LA(LC(I)))  &none
&none  &none  &none  &none  &none  &none    &none              &none              &none              &none              &none  &none
                     &none  &none  &none    &none              &none              &none
            >;
        };
    };
};

